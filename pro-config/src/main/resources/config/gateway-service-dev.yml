server:
  port: 8101
spring:
  application:
    name: gateway-service
  cloud:        # spring cloud gateway 路由配置方式
    gateway:
      discovery:      #是否与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
        locator:      #路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问。
          enabled: true
      routes:
      - id: USER-SERVICE-RESTFULL                  #从注册中心获取服务
        uri: lb://USER-SERVICE-RESTFULL
        predicates:
        - Path=/user/**
        filters:
        - StripPrefix=1
        # 熔断降级配置
        - name: Hystrix
          args:
            name : default
            fallbackUri: 'forward:/defaultfallback'
        - name: RequestRateLimiter
          args:
            # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
            key-resolver: '#{@remoteAddrKeyResolver}'
            # 每秒最大访问次数
            redis-rate-limiter.replenishRate: 20
            # 令牌桶最大容量
            redis-rate-limiter.burstCapacity: 20
      - id: SSO-SERVICE                #从注册中心获取服务
        uri: lb://SSO-SERVICE
        predicates:
        - Path=/auth/**
        filters:
        - StripPrefix=1
        # 熔断降级配置
        - name: Hystrix
          args:
            name: default
            fallbackUri: 'forward:/defaultfallback'
        - name: RequestRateLimiter
          args:
            # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
            key-resolver: '#{@remoteAddrKeyResolver}'
            # 每秒最大访问次数
            redis-rate-limiter.replenishRate: 20
            # 令牌桶最大容量
            redis-rate-limiter.burstCapacity: 20
      - id: CONFIG-SERVICE              #从注册中心获取服务
        uri: lb://CONFIG-SERVICE
        predicates:
        - Path=/config/**
        filters:
        - StripPrefix=1
        # 熔断降级配置
        - name: Hystrix
          args:
            name: default
            fallbackUri: 'forward:/defaultfallback'
        - name: RequestRateLimiter
          args:
            # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
            key-resolver: '#{@remoteAddrKeyResolver}'
            # 每秒最大访问次数
            redis-rate-limiter.replenishRate: 20
            # 令牌桶最大容量
management:
  server:
    port: 10008
  endpoints:
    web:
      exposure:
        include: "*"
feign:
  hystrix:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000